/*
 * EU-SEC CA API
 * This is audit-api serves evidences for a continuous audit. In the EU-Sec project such evidences are collected and evaluated to determine the compliance status based on controls from the    [ccm](https://cloudsecurityalliance.org/group/cloud-controls-matrix).
 *
 * OpenAPI spec version: 1.0.5
 * Contact: contact@sec-cert.eu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package eu.sec.cert.api;

import eu.sec.cert.ApiException;
import eu.sec.cert.model.AccessRequest;
import eu.sec.cert.model.AccessResponse;
import eu.sec.cert.model.AdminAuth;
import eu.sec.cert.model.AdminResponse;
import eu.sec.cert.model.GroupsResponse;
import eu.sec.cert.model.LoginResponse;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CaApiIamApi
 */
@Ignore
public class CaApiIamApiTest {

    private final CaApiIamApi api = new CaApiIamApi();

    
    /**
     * Returns a list of administrators
     *
     * Based on CCM-IAM-12. Reads out all administrators of the application and returns them.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAdminsTest() throws ApiException {
        String scope = null;
        AdminResponse response = api.getAdmins(scope);

        // TODO: test validations
    }
    
    /**
     * Checks whether a user has a certain access to an object.
     *
     * Checks whether a user has a certain access to an object.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getObjectAccessTest() throws ApiException {
        AccessRequest request = null;
        String scope = null;
        AccessResponse response = api.getObjectAccess(request, scope);

        // TODO: test validations
    }
    
    /**
     * Returns a list of the last logins of a user
     *
     * Based on CCM-IAM-12. Whenever a user logs in into the application this kind access gets logged. This call returns the last accesses of a particular user based on existing logs.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getUserAccessesTest() throws ApiException {
        String userId = null;
        String scope = null;
        String from = null;
        Integer limit = null;
        LoginResponse response = api.getUserAccesses(userId, scope, from, limit);

        // TODO: test validations
    }
    
    /**
     * Returns the authentication type of a user. E.g password, two-factor
     *
     * Based on CCM-IAM-12. Reads out a particular users authentication settings and returns them. Propper interpretation has to be performed by the audit tool.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getUserAuthTypeTest() throws ApiException {
        String userId = null;
        String scope = null;
        AdminAuth response = api.getUserAuthType(userId, scope);

        // TODO: test validations
    }
    
    /**
     * Returns the groups of a user
     *
     * Based on CCM-IAM-12. Depending on the implementation a group can be e.g a unix group, organisation, role etc.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getUserOrganisationTest() throws ApiException {
        String userId = null;
        String scope = null;
        GroupsResponse response = api.getUserOrganisation(userId, scope);

        // TODO: test validations
    }
    
}
